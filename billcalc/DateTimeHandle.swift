//
//  DateTimeHandle.swift
//  billcalc
//
//  Created by xxing on 16/7/31.
//  Copyright © 2016年 xxing. All rights reserved.
//

import UIKit

let sDateTimeHandle = DateTimeHandle()

let D_DAY:Int = 24 * 3600
let WEEK_CN:[String] = ["日", "一", "二", "三", "四", "五", "六"]

extension Date {
    func weekday()->Int{
        
        let calendar = Calendar(identifier: .gregorian)
        return calendar.dateComponents([.weekday], from: self).weekday!
        /*  算法2
         let interval = self.timeIntervalSince1970
         let days = Int(interval) / D_DAY
         return Int((days - 3) % 7) // 中国习惯方式
         */
    }
    
    func daysSinceToday()->Int{
        var today = Date()
        let formatter = DateFormatter()
        formatter.dateFormat = "yyyy-MM-dd"
        let todayStr = formatter.string(from: today)
        today = formatter.date(from: todayStr)! //抹掉时间，只保留日期，便于准确到期天数
        //self = formatter.dateFromString(formatter.stringFromDate(self))
        
        return Int(self.timeIntervalSince(today)) / D_DAY
    }
    
    func format(_ format:String)->String{
        let formatter = DateFormatter()
        formatter.dateFormat = format
        return formatter.string(from: self)
    }
    
    func components()->DateComponents {
        let calendar = Calendar(identifier: .gregorian)
        return calendar.dateComponents([.year, .month, .day, .weekday],
                                       from: self)
    }
    
    func componentsCN() -> DateComponents {
        let calendar = Calendar(identifier: .chinese)
        return calendar.dateComponents([.year, .month, .day, .weekday],
                                       from: self)
    }
    
    func isLeapYear()->Bool{
        let comp = self.components()
        if((comp.year! % 4 == 0 && comp.year! % 100 != 0)
            || comp.year! % 400 == 0) {
            return true;
        }
        return false;
    }
    
}

class DateTimeHandle {
    
    var dateFormatter = DateFormatter()
    let holidaysCN = ["1-1":"春节", "1-2":"春节", "1-3":"春节", "1-4":"春节",
                      "1-5":"春节", "1-6":"春节", "1-7":"春节",//春节默认7天假
                      "5-5":"端午", "8-15":"中秋", "12-30":"除夕"]
    let holidays = ["1-1":"元旦", "2-14":"情人", "3-8":"妇女", "3-12":"植树",
                    "5-1":"劳动", "5-4":"青年", "6-1":"儿童", "7-1":"建党",
                    "8-1":"建军", "9-10":"教师", "10-1":"国庆", "10-2":"国庆",
                    "10-3":"国庆", "10-4":"国庆", "10-5":"国庆", "10-6":"国庆",
                    "10-7":"国庆", "12-25":"圣诞"]
    let chineseDays = ["小寒", "大寒", "立春", "雨水", "惊蛰", "春分",
                       "清明", "谷雨", "立夏", "小满", "芒种", "夏至",
                       "小暑", "大暑", "立秋", "处暑", "白露", "秋分",
                       "寒露", "霜降", "立冬", "小雪", "大雪", "冬至"]
    let lunarHolDays = [
        0x96,0xB4, 0x96,0xA6, 0x97,0x97, 0x78,0x79, 0x79,0x69, 0x78,0x77,   //1901
        0x96,0xA4, 0x96,0x96, 0x97,0x87, 0x79,0x79, 0x79,0x69, 0x78,0x78,   //1902
        0x96,0xA5, 0x87,0x96, 0x87,0x87, 0x79,0x69, 0x69,0x69, 0x78,0x78,   //1903
        0x86,0xA5, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x79, 0x78,0x87,   //1904
        0x96,0xB4, 0x96,0xA6, 0x97,0x97, 0x78,0x79, 0x79,0x69, 0x78,0x77,   //1905
        0x96,0xA4, 0x96,0x96, 0x97,0x97, 0x79,0x79, 0x79,0x69, 0x78,0x78,   //1906
        0x96,0xA5, 0x87,0x96, 0x87,0x87, 0x79,0x69, 0x69,0x69, 0x78,0x78,   //1907
        0x86,0xA5, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x69, 0x78,0x87,   //1908
        0x96,0xB4, 0x96,0xA6, 0x97,0x97, 0x78,0x79, 0x79,0x69, 0x78,0x77,   //1909
        0x96,0xA4, 0x96,0x96, 0x97,0x97, 0x79,0x79, 0x79,0x69, 0x78,0x78,   //1910
        0x96,0xA5, 0x87,0x96, 0x87,0x87, 0x79,0x69, 0x69,0x69, 0x78,0x78,   //1911
        0x86,0xA5, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x69, 0x78,0x87,   //1912
        0x95,0xB4, 0x96,0xA6, 0x97,0x97, 0x78,0x79, 0x79,0x69, 0x78,0x77,   //1913
        0x96,0xB4, 0x96,0xA6, 0x97,0x97, 0x79,0x79, 0x79,0x69, 0x78,0x78,   //1914
        0x96,0xA5, 0x97,0x96, 0x97,0x87, 0x79,0x79, 0x69,0x69, 0x78,0x78,   //1915
        0x96,0xA5, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x79, 0x77,0x87,   //1916
        0x95,0xB4, 0x96,0xA6, 0x96,0x97, 0x78,0x79, 0x78,0x69, 0x78,0x87,   //1917
        0x96,0xB4, 0x96,0xA6, 0x97,0x97, 0x79,0x79, 0x79,0x69, 0x78,0x77,   //1918
        0x96,0xA5, 0x97,0x96, 0x97,0x87, 0x79,0x79, 0x69,0x69, 0x78,0x78,   //1919
        0x96,0xA5, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x79, 0x77,0x87,   //1920
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x78,0x79, 0x78,0x69, 0x78,0x87,   //1921
        0x96,0xB4, 0x96,0xA6, 0x97,0x97, 0x79,0x79, 0x79,0x69, 0x78,0x77,   //1922
        0x96,0xA4, 0x96,0x96, 0x97,0x87, 0x79,0x79, 0x69,0x69, 0x78,0x78,   //1923
        0x96,0xA5, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x79, 0x77,0x87,   //1924
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x78,0x79, 0x78,0x69, 0x78,0x87,   //1925
        0x96,0xB4, 0x96,0xA6, 0x97,0x97, 0x78,0x79, 0x79,0x69, 0x78,0x77,   //1926
        0x96,0xA4, 0x96,0x96, 0x97,0x87, 0x79,0x79, 0x79,0x69, 0x78,0x78,   //1927
        0x96,0xA5, 0x96,0xA5, 0x96,0x96, 0x88,0x78, 0x78,0x78, 0x87,0x87,   //1928
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x79, 0x77,0x87,   //1929
        0x96,0xB4, 0x96,0xA6, 0x97,0x97, 0x78,0x79, 0x79,0x69, 0x78,0x77,   //1930
        0x96,0xA4, 0x96,0x96, 0x97,0x87, 0x79,0x79, 0x79,0x69, 0x78,0x78,   //1931
        0x96,0xA5, 0x96,0xA5, 0x96,0x96, 0x88,0x78, 0x78,0x78, 0x87,0x87,   //1932
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x69, 0x78,0x87,   //1933
        0x96,0xB4, 0x96,0xA6, 0x97,0x97, 0x78,0x79, 0x79,0x69, 0x78,0x77,   //1934
        0x96,0xA4, 0x96,0x96, 0x97,0x97, 0x79,0x79, 0x79,0x69, 0x78,0x78,   //1935
        0x96,0xA5, 0x96,0xA5, 0x96,0x96, 0x88,0x78, 0x78,0x78, 0x87,0x87,   //1936
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x69, 0x78,0x87,   //1937
        0x96,0xB4, 0x96,0xA6, 0x97,0x97, 0x78,0x79, 0x79,0x69, 0x78,0x77,   //1938
        0x96,0xA4, 0x96,0x96, 0x97,0x97, 0x79,0x79, 0x79,0x69, 0x78,0x78,   //1939
        0x96,0xA5, 0x96,0xA5, 0x96,0x96, 0x88,0x78, 0x78,0x78, 0x87,0x87,   //1940
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x69, 0x78,0x87,   //1941
        0x96,0xB4, 0x96,0xA6, 0x97,0x97, 0x78,0x79, 0x79,0x69, 0x78,0x77,   //1942
        0x96,0xA4, 0x96,0x96, 0x97,0x97, 0x79,0x79, 0x79,0x69, 0x78,0x78,   //1943
        0x96,0xA5, 0x96,0xA5, 0xA6,0x96, 0x88,0x78, 0x78,0x78, 0x87,0x87,   //1944
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x79, 0x77,0x87,   //1945
        0x95,0xB4, 0x96,0xA6, 0x97,0x97, 0x78,0x79, 0x78,0x69, 0x78,0x77,   //1946
        0x96,0xB4, 0x96,0xA6, 0x97,0x97, 0x79,0x79, 0x79,0x69, 0x78,0x78,   //1947
        0x96,0xA5, 0xA6,0xA5, 0xA6,0x96, 0x88,0x88, 0x78,0x78, 0x87,0x87,   //1948
        0xA5,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x79, 0x78,0x79, 0x77,0x87,   //1949
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x78,0x79, 0x78,0x69, 0x78,0x77,   //1950
        0x96,0xB4, 0x96,0xA6, 0x97,0x97, 0x79,0x79, 0x79,0x69, 0x78,0x78,   //1951
        0x96,0xA5, 0xA6,0xA5, 0xA6,0x96, 0x88,0x88, 0x78,0x78, 0x87,0x87,   //1952
        0xA5,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x79, 0x77,0x87,   //1953
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x78,0x79, 0x78,0x68, 0x78,0x87,   //1954
        0x96,0xB4, 0x96,0xA6, 0x97,0x97, 0x78,0x79, 0x79,0x69, 0x78,0x77,   //1955
        0x96,0xA5, 0xA5,0xA5, 0xA6,0x96, 0x88,0x88, 0x78,0x78, 0x87,0x87,   //1956
        0xA5,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x79, 0x77,0x87,   //1957
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x69, 0x78,0x87,   //1958
        0x96,0xB4, 0x96,0xA6, 0x97,0x97, 0x78,0x79, 0x79,0x69, 0x78,0x77,   //1959
        0x96,0xA4, 0xA5,0xA5, 0xA6,0x96, 0x88,0x88, 0x88,0x78, 0x87,0x87,   //1960
        0xA5,0xB4, 0x96,0xA5, 0x96,0x96, 0x88,0x78, 0x78,0x78, 0x87,0x87,   //1961
        0x96,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x69, 0x78,0x87,   //1962
        0x96,0xB4, 0x96,0xA6, 0x97,0x97, 0x78,0x79, 0x79,0x69, 0x78,0x77,   //1963
        0x96,0xA4, 0xA5,0xA5, 0xA6,0x96, 0x88,0x88, 0x88,0x78, 0x87,0x87,   //1964
        0xA5,0xB4, 0x96,0xA5, 0x96,0x96, 0x88,0x78, 0x78,0x78, 0x87,0x87,   //1965
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x69, 0x78,0x87,   //1966
        0x96,0xB4, 0x96,0xA6, 0x97,0x97, 0x78,0x79, 0x79,0x69, 0x78,0x77,   //1967
        0x96,0xA4, 0xA5,0xA5, 0xA6,0xA6, 0x88,0x88, 0x88,0x78, 0x87,0x87,   //1968
        0xA5,0xB4, 0x96,0xA5, 0x96,0x96, 0x88,0x78, 0x78,0x78, 0x87,0x87,   //1969
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x69, 0x78,0x87,   //1970
        0x96,0xB4, 0x96,0xA6, 0x97,0x97, 0x78,0x79, 0x79,0x69, 0x78,0x77,   //1971
        0x96,0xA4, 0xA5,0xA5, 0xA6,0xA6, 0x88,0x88, 0x88,0x78, 0x87,0x87,   //1972
        0xA5,0xB5, 0x96,0xA5, 0xA6,0x96, 0x88,0x78, 0x78,0x78, 0x87,0x87,   //1973
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x69, 0x78,0x87,   //1974
        0x96,0xB4, 0x96,0xA6, 0x97,0x97, 0x78,0x79, 0x78,0x69, 0x78,0x77,   //1975
        0x96,0xA4, 0xA5,0xB5, 0xA6,0xA6, 0x88,0x89, 0x88,0x78, 0x87,0x87,   //1976
        0xA5,0xB4, 0x96,0xA5, 0x96,0x96, 0x88,0x88, 0x78,0x78, 0x87,0x87,   //1977
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x79, 0x78,0x87,   //1978
        0x96,0xB4, 0x96,0xA6, 0x96,0x97, 0x78,0x79, 0x78,0x69, 0x78,0x77,   //1979
        0x96,0xA4, 0xA5,0xB5, 0xA6,0xA6, 0x88,0x88, 0x88,0x78, 0x87,0x87,   //1980
        0xA5,0xB4, 0x96,0xA5, 0xA6,0x96, 0x88,0x88, 0x78,0x78, 0x77,0x87,   //1981
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x79, 0x77,0x87,   //1982
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x78,0x79, 0x78,0x69, 0x78,0x77,   //1983
        0x96,0xB4, 0xA5,0xB5, 0xA6,0xA6, 0x87,0x88, 0x88,0x78, 0x87,0x87,   //1984
        0xA5,0xB4, 0xA6,0xA5, 0xA6,0x96, 0x88,0x88, 0x78,0x78, 0x87,0x87,   //1985
        0xA5,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x79, 0x77,0x87,   //1986
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x79, 0x78,0x69, 0x78,0x87,   //1987
        0x96,0xB4, 0xA5,0xB5, 0xA6,0xA6, 0x87,0x88, 0x88,0x78, 0x87,0x86,   //1988
        0xA5,0xB4, 0xA5,0xA5, 0xA6,0x96, 0x88,0x88, 0x88,0x78, 0x87,0x87,   //1989
        0xA5,0xB4, 0x96,0xA5, 0x96,0x96, 0x88,0x78, 0x78,0x79, 0x77,0x87,   //1990
        0x95,0xB4, 0x96,0xA5, 0x86,0x97, 0x88,0x78, 0x78,0x69, 0x78,0x87,   //1991
        0x96,0xB4, 0xA5,0xB5, 0xA6,0xA6, 0x87,0x88, 0x88,0x78, 0x87,0x86,   //1992
        0xA5,0xB3, 0xA5,0xA5, 0xA6,0x96, 0x88,0x88, 0x88,0x78, 0x87,0x87,   //1993
        0xA5,0xB4, 0x96,0xA5, 0x96,0x96, 0x88,0x78, 0x78,0x78, 0x87,0x87,   //1994
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x76, 0x78,0x69, 0x78,0x87,   //1995
        0x96,0xB4, 0xA5,0xB5, 0xA6,0xA6, 0x87,0x88, 0x88,0x78, 0x87,0x86,   //1996
        0xA5,0xB3, 0xA5,0xA5, 0xA6,0xA6, 0x88,0x88, 0x88,0x78, 0x87,0x87,   //1997
        0xA5,0xB4, 0x96,0xA5, 0x96,0x96, 0x88,0x78, 0x78,0x78, 0x87,0x87,   //1998
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x69, 0x78,0x87,   //1999
        0x96,0xB4, 0xA5,0xB5, 0xA6,0xA6, 0x87,0x88, 0x88,0x78, 0x87,0x86,   //2000
        0xA5,0xB3, 0xA5,0xA5, 0xA6,0xA6, 0x88,0x88, 0x88,0x78, 0x87,0x87,   //2001
        0xA5,0xB4, 0x96,0xA5, 0x96,0x96, 0x88,0x78, 0x78,0x78, 0x87,0x87,   //2002
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x69, 0x78,0x87,   //2003
        0x96,0xB4, 0xA5,0xB5, 0xA6,0xA6, 0x87,0x88, 0x88,0x78, 0x87,0x86,   //2004
        0xA5,0xB3, 0xA5,0xA5, 0xA6,0xA6, 0x88,0x88, 0x88,0x78, 0x87,0x87,   //2005
        0xA5,0xB4, 0x96,0xA5, 0xA6,0x96, 0x88,0x88, 0x78,0x78, 0x87,0x87,   //2006
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x69, 0x78,0x87,   //2007
        0x96,0xB4, 0xA5,0xB5, 0xA6,0xA6, 0x87,0x88, 0x87,0x78, 0x87,0x86,   //2008
        0xA5,0xB3, 0xA5,0xB5, 0xA6,0xA6, 0x88,0x88, 0x88,0x78, 0x87,0x87,   //2009
        0xA5,0xB4, 0x96,0xA5, 0xA6,0x96, 0x88,0x88, 0x78,0x78, 0x87,0x87,   //2010
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x79, 0x78,0x87,   //2011
        0x96,0xB4, 0xA5,0xB5, 0xA5,0xA6, 0x87,0x88, 0x87,0x78, 0x87,0x86,   //2012
        0xA5,0xB3, 0xA5,0xB5, 0xA6,0xA6, 0x87,0x88, 0x88,0x78, 0x87,0x87,   //2013
        0xA5,0xB4, 0x96,0xA5, 0xA6,0x96, 0x88,0x88, 0x78,0x78, 0x87,0x87,   //2014
        0x95,0xB4, 0x96,0xA5, 0x96,0x97, 0x88,0x78, 0x78,0x79, 0x77,0x87,   //2015
        0x95,0xB4, 0xA5,0xB4, 0xA5,0xA6, 0x87,0x88, 0x87,0x78, 0x87,0x86,   //2016
        0xA5,0xC3, 0xA5,0xB5, 0xA6,0xA6, 0x87,0x88, 0x88,0x78, 0x87,0x87,   //2017
        0xA5,0xB4, 0xA6,0xA5, 0xA6,0x96, 0x88,0x88, 0x78,0x78, 0x87,0x87,   //2018
        0xA5,0xB4, 0x96,0xA5, 0x96,0x96, 0x88,0x78, 0x78,0x79, 0x77,0x87,   //2019
        0x95,0xB4, 0xA5,0xB4, 0xA5,0xA6, 0x97,0x87, 0x87,0x78, 0x87,0x86,   //2020
        0xA5,0xC3, 0xA5,0xB5, 0xA6,0xA6, 0x87,0x88, 0x88,0x78, 0x87,0x86,   //2021
        0xA5,0xB4, 0xA5,0xA5, 0xA6,0x96, 0x88,0x88, 0x88,0x78, 0x87,0x87,   //2022
        0xA5,0xB4, 0x96,0xA5, 0x96,0x96, 0x88,0x78, 0x78,0x79, 0x77,0x87,   //2023
        0x95,0xB4, 0xA5,0xB4, 0xA5,0xA6, 0x97,0x87, 0x87,0x78, 0x87,0x96,   //2024
        0xA5,0xC3, 0xA5,0xB5, 0xA6,0xA6, 0x87,0x88, 0x88,0x78, 0x87,0x86,   //2025
        0xA5,0xB3, 0xA5,0xA5, 0xA6,0xA6, 0x88,0x88, 0x88,0x78, 0x87,0x87,   //2026
        0xA5,0xB4, 0x96,0xA5, 0x96,0x96, 0x88,0x78, 0x78,0x78, 0x87,0x87,   //2027
        0x95,0xB4, 0xA5,0xB4, 0xA5,0xA6, 0x97,0x87, 0x87,0x78, 0x87,0x96,   //2028
        0xA5,0xC3, 0xA5,0xB5, 0xA6,0xA6, 0x87,0x88, 0x88,0x78, 0x87,0x86,   //2029
        0xA5,0xB3, 0xA5,0xA5, 0xA6,0xA6, 0x88,0x88, 0x88,0x78, 0x87,0x87,   //2030
        0xA5,0xB4, 0x96,0xA5, 0x96,0x96, 0x88,0x78, 0x78,0x78, 0x87,0x87,   //2031
        0x95,0xB4, 0xA5,0xB4, 0xA5,0xA6, 0x97,0x87, 0x87,0x78, 0x87,0x96,   //2032
        0xA5,0xC3, 0xA5,0xB5, 0xA6,0xA6, 0x88,0x88, 0x88,0x78, 0x87,0x86,   //2033
        0xA5,0xB3, 0xA5,0xA5, 0xA6,0xA6, 0x88,0x78, 0x88,0x78, 0x87,0x87,   //2034
        0xA5,0xB4, 0x96,0xA5, 0xA6,0x96, 0x88,0x88, 0x78,0x78, 0x87,0x87,   //2035
        0x95,0xB4, 0xA5,0xB4, 0xA5,0xA6, 0x97,0x87, 0x87,0x78, 0x87,0x96,   //2036
        0xA5,0xC3, 0xA5,0xB5, 0xA6,0xA6, 0x87,0x88, 0x88,0x78, 0x87,0x86,   //2037
        0xA5,0xB3, 0xA5,0xA5, 0xA6,0xA6, 0x88,0x88, 0x88,0x78, 0x87,0x87,   //2038
        0xA5,0xB4, 0x96,0xA5, 0xA6,0x96, 0x88,0x88, 0x78,0x78, 0x87,0x87,   //2039
        0x95,0xB4, 0xA5,0xB4, 0xA5,0xA6, 0x97,0x87, 0x87,0x78, 0x87,0x96,   //2040
        0xA5,0xC3, 0xA5,0xB5, 0xA5,0xA6, 0x87,0x88, 0x87,0x78, 0x87,0x86,   //2041
        0xA5,0xB3, 0xA5,0xB5, 0xA6,0xA6, 0x88,0x88, 0x88,0x78, 0x87,0x87,   //2042
        0xA5,0xB4, 0x96,0xA5, 0xA6,0x96, 0x88,0x88, 0x78,0x78, 0x87,0x87,   //2043
        0x95,0xB4, 0xA5,0xB4, 0xA5,0xA6, 0x97,0x87, 0x87,0x88, 0x87,0x96,   //2044
        0xA5,0xC3, 0xA5,0xB4, 0xA5,0xA6, 0x87,0x88, 0x87,0x78, 0x87,0x86,   //2045
        0xA5,0xB3, 0xA5,0xB5, 0xA6,0xA6, 0x87,0x88, 0x88,0x78, 0x87,0x87,   //2046
        0xA5,0xB4, 0x96,0xA5, 0xA6,0x96, 0x88,0x88, 0x78,0x78, 0x87,0x87,   //2047
        0x95,0xB4, 0xA5,0xB4, 0xA5,0xA5, 0x97,0x87, 0x87,0x88, 0x86,0x96,   //2048
        0xA4,0xC3, 0xA5,0xA5, 0xA5,0xA6, 0x97,0x87, 0x87,0x78, 0x87,0x86,   //2049
        0xA5,0xC3, 0xA5,0xB5, 0xA6,0xA6, 0x87,0x88, 0x78,0x78, 0x87,0x87]    //2050
    
    func isLeapYear(year: Int) -> Bool {
        
        if((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {
            return true;
        }
        return false;
    }
    
    // 日期格式是否正确
    func isValidDate(year:Int, month:Int, day:Int)->Bool {
        
        var maxMonthDay = 30
        
        switch month{
        case 1, 3, 5, 7, 8, 10, 12:
            maxMonthDay = 31
        case 4, 6, 9, 11:
            maxMonthDay = 30
        case 2:
            if isLeapYear(year: year) {
                maxMonthDay = 29
            } else {
                maxMonthDay = 28
            }
        default:
            return false
        }
        
        return day < 1 || day > maxMonthDay ? false : true
    }
    
    func createDate(year: Int, month: Int, day: Int) -> Date? {
        
        return date(from: String(format: "%d-%d-%d", year, month, day))
    }
    
    func fullDateString(from: Date) -> String {
        
        var string = self.string(from: from)
        string.append(String(format:" %@", holiday(from: from)))
        return string
    }
    
    func sloarTermIndex(from: Date) -> Int {
        
        let START_YEAR = 1901
        let comp = from.components()
        var index = (comp.year! - START_YEAR) * 12 + comp.month! - 1
        let flag = lunarHolDays[index]
        var day = 0x00
        
        if comp.day! < 15 {
            day = 15 - ((flag >> 4) & 0x0f)
        } else {
            day = 15 + (flag & 0x0f)
        }
        
        index = -1
        if comp.day! == day {
            index = (comp.month! - 1) * 2 + (comp.day! > 15 ? 1 : 0)
        }
        
        return index
    }
    
    /// 获得24节气，有效到 2050年
    func sloarTerm(from: Date) -> String? {
        
        let index = sloarTermIndex(from: from)
        
        if index >= 0 && index < chineseDays.count {
            return chineseDays[index]
        }
        return nil
    }
    
    func holiday(from: Date) -> String {
        
        var components = from.componentsCN()
        var key = String(format: "%d-%d", components.month!, components.day!)
        var holiday = holidaysCN[key]
        
        if holiday == nil {
            components = from.components()
            key = String(format: "%d-%d", components.month!, components.day!)
            holiday = holidays[key]
        }
        
        if holiday == nil {
            let index = sloarTermIndex(from: from)
            if index == 6 { // 仅清明节才显示
                holiday = chineseDays[index]
            }
            
            //holiday = sloarTerm(from: from)
        }
        holiday = holiday == nil ? string(from: from, format: "EE") : holiday
        
        return holiday!
    }
    
    /// 获取放假天数 TODO：根据假日办的安排来计算
    func holidayDays(from: Date) -> Int {
        
        var days = 0
        let compCN = from.componentsCN()
        let comp = from.components()
        
        // 农历节假日
        switch compCN.month! {
        case 1:
            if compCN.day! < 8 { // 春节
                days = 8 - compCN.day!
            }
        case 5:
            if compCN.day! >= 5 && compCN.day! <= 7 { // 端午
                days = 8 - compCN.day!
            }
        case 8:
            if compCN.day! >= 15 && compCN.day! <= 17 { // 中秋
                days = 18 - compCN.day!
            }
        case 12:
            days = compCN.day! == 30 ? 8 : 0
        default:
            let index = sloarTermIndex(from: from)
            if index == 6 { // 清明节
                days = 3
            }
            break
        }
        
        // 公历节假日
        if days == 0 {
            switch comp.month! {
            case 1, 5:
                if comp.day! <= 3 { // 元旦节, 劳动节
                    days = 4 - comp.day!
                }
            case 10:
                if comp.day! <= 7 { // 国庆节
                    days = 8 - comp.day!
                }
            default:
                break
            }
        }
        
        if days == 0 {
            if comp.weekday! == 7 { // 周六
                days = 2
            } else if comp.weekday! == 0 { // 周日
                days = 1
            }
        }
        
        return days
    }
    
    func string(from: Date, format: String = "yyyy-MM-dd") -> String {
        
        dateFormatter.dateFormat = format
        return dateFormatter.string(from: from)
    }
    
    func date(from: String, format: String = "yyyy-MM-dd") -> Date? {
        
        dateFormatter.dateFormat = format
        return dateFormatter.date(from: from)
    }
    
    func dateSinceToday(withDays days: Int) -> Date {
        
        let compnenets = Date().components()
        let today = createDate(year: compnenets.year!, month: compnenets.month!, day: compnenets.day!)
        return (today?.addingTimeInterval(TimeInterval(D_DAY * days)))!
    }
    
}
